# Generated by Django 4.2.13 on 2025-10-03 16:53

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('learning', '0005_glossaryentry_audio_pronunciation'),
    ]

    operations = [
        migrations.CreateModel(
            name='Achievement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('points_reward', models.PositiveIntegerField(default=50)),
                ('icon', models.CharField(default='üèÜ', max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='DailyChallenge',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('challenge_type', models.CharField(choices=[('lessons', 'Completar lecciones'), ('exercises', 'Resolver ejercicios'), ('streak', 'Mantener racha'), ('pronunciation', 'Practicar pronunciaci√≥n'), ('glossary', 'Agregar palabras al glosario')], max_length=20)),
                ('target_value', models.PositiveIntegerField(default=1)),
                ('points_reward', models.PositiveIntegerField(default=10)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Leaderboard',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('period', models.CharField(choices=[('daily', 'Diario'), ('weekly', 'Semanal'), ('monthly', 'Mensual'), ('all_time', 'Todo el tiempo')], default='weekly', max_length=20)),
                ('last_updated', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='VirtualPet',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='Karai', max_length=50)),
                ('happiness', models.PositiveSmallIntegerField(default=50)),
                ('energy', models.PositiveSmallIntegerField(default=70)),
                ('level', models.PositiveSmallIntegerField(default=1)),
                ('experience', models.PositiveIntegerField(default=0)),
                ('last_interaction', models.DateTimeField(auto_now=True)),
                ('last_fed', models.DateTimeField(blank=True, null=True)),
                ('last_played', models.DateTimeField(blank=True, null=True)),
                ('last_cleaned', models.DateTimeField(blank=True, null=True)),
                ('mood', models.CharField(choices=[('happy', 'Feliz'), ('sad', 'Triste'), ('tired', 'Cansado'), ('hungry', 'Hambriento'), ('bored', 'Aburrido'), ('excited', 'Emocionado'), ('sleepy', 'Somnoliento')], default='happy', max_length=20)),
                ('species', models.CharField(choices=[('jaguarete', 'Jaguaret√©'), ('tuc√°n', 'Tuc√°n'), ('capibara', 'Capibara'), ('mariposa', 'Mariposa'), ('mono', 'Mono')], default='jaguarete', max_length=20)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='pet', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('points', models.PositiveIntegerField(default=0)),
                ('streak', models.PositiveIntegerField(default=0)),
                ('last_active', models.DateField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserDailyChallenge',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(auto_now_add=True)),
                ('current_value', models.PositiveIntegerField(default=0)),
                ('is_completed', models.BooleanField(default=False)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('challenge', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='learning.dailychallenge')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='daily_challenges', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('user', 'challenge', 'date')},
            },
        ),
        migrations.CreateModel(
            name='UserAchievement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('earned_at', models.DateTimeField(auto_now_add=True)),
                ('achievement', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='learning.achievement')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='achievements', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('user', 'achievement')},
            },
        ),
        migrations.CreateModel(
            name='LeaderboardEntry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score', models.PositiveIntegerField(default=0)),
                ('rank', models.PositiveIntegerField(default=0)),
                ('period_start', models.DateField()),
                ('period_end', models.DateField()),
                ('leaderboard', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='entries', to='learning.leaderboard')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-score', 'user__username'],
                'unique_together': {('leaderboard', 'user', 'period_start', 'period_end')},
            },
        ),
    ]
